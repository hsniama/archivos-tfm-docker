
Report Summary

┌─────────────────────────┬────────────┬───────────────────┬─────────┐
│         Target          │    Type    │ Misconfigurations │ Secrets │
├─────────────────────────┼────────────┼───────────────────┼─────────┤
│ app/Dockerfile          │ dockerfile │         2         │    -    │
├─────────────────────────┼────────────┼───────────────────┼─────────┤
│ app/k8s/deployment.yaml │ kubernetes │        19         │    -    │
├─────────────────────────┼────────────┼───────────────────┼─────────┤
│ app/k8s/service.yaml    │ kubernetes │         0         │    -    │
└─────────────────────────┴────────────┴───────────────────┴─────────┘
Legend:
- '-': Not scanned
- '0': Clean (no security findings detected)


app/Dockerfile (dockerfile)
===========================
Tests: 28 (SUCCESSES: 26, FAILURES: 2)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

AVD-DS-0002 (HIGH): Specify at least 1 USER command in Dockerfile with non-root user as argument
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-DS-0026 (LOW): Add HEALTHCHECK instruction in your Dockerfile
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────



app/k8s/deployment.yaml (kubernetes)
====================================
Tests: 99 (SUCCESSES: 80, FAILURES: 19)
Failures: 19 (UNKNOWN: 0, LOW: 11, MEDIUM: 6, HIGH: 2, CRITICAL: 0)

AVD-KSV-0001 (MEDIUM): Container 'devops-microservice' of Deployment 'devops-microservice' should set 'securityContext.allowPrivilegeEscalation' to false
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0003 (LOW): Container 'devops-microservice' of Deployment 'devops-microservice' should add 'ALL' to 'securityContext.capabilities.drop'
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0004 (LOW): Container 'devops-microservice' of 'deployment' 'devops-microservice' in 'default' namespace should set securityContext.capabilities.drop
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Security best practices require containers to run with minimal required capabilities.

See https://avd.aquasec.com/misconfig/ksv004
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0011 (LOW): Container 'devops-microservice' of Deployment 'devops-microservice' should set 'resources.limits.cpu'
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Enforcing CPU limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv011
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0012 (MEDIUM): Container 'devops-microservice' of Deployment 'devops-microservice' should set 'securityContext.runAsNonRoot' to true
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0013 (MEDIUM): Container 'devops-microservice' of Deployment 'devops-microservice' should specify an image tag
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0014 (HIGH): Container 'devops-microservice' of Deployment 'devops-microservice' should set 'securityContext.readOnlyRootFilesystem' to true
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0015 (LOW): Container 'devops-microservice' of Deployment 'devops-microservice' should set 'resources.requests.cpu'
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv015
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0016 (LOW): Container 'devops-microservice' of Deployment 'devops-microservice' should set 'resources.requests.memory'
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.

See https://avd.aquasec.com/misconfig/ksv016
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0018 (LOW): Container 'devops-microservice' of Deployment 'devops-microservice' should set 'resources.limits.memory'
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Enforcing memory limits prevents DoS via resource exhaustion.

See https://avd.aquasec.com/misconfig/ksv018
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0020 (LOW): Container 'devops-microservice' of Deployment 'devops-microservice' should set 'securityContext.runAsUser' > 10000
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0021 (LOW): Container 'devops-microservice' of Deployment 'devops-microservice' should set 'securityContext.runAsGroup' > 10000
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0030 (LOW): Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0033 (MEDIUM): container devops-microservice of deployment devops-microservice in default namespace should restrict container image to your specific registry domain. See the full GCR list here: https://cloud.google.com/container-registry/docs/overview#registries
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Containers should only use images from trusted GCR registries.

See https://avd.aquasec.com/misconfig/ksv033
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0035 (MEDIUM): Container 'devops-microservice' of Deployment 'devops-microservice' should restrict images to own ECR repository. See the full ECR list here: https://docs.aws.amazon.com/general/latest/gr/ecr.html
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Container images from non-ECR registries should be forbidden.

See https://avd.aquasec.com/misconfig/ksv035
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0104 (MEDIUM): container "devops-microservice" of deployment "devops-microservice" in "default" namespace should specify a seccomp profile
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can bypass Seccomp protection policies.

See https://avd.aquasec.com/misconfig/ksv104
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0106 (LOW): container should drop all
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:16-30
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  16 ┌         - name: devops-microservice
  17 │           image: devopsregistryhenry.azurecr.io/devops-microservice:latest
  18 │           ports:
  19 │             - containerPort: 8000
  20 │           env:
  21 │             - name: API_KEY
  22 │               valueFrom:
  23 │                 secretKeyRef:
  24 └                   name: devops-secrets
  ..   
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0110 (LOW): deployment devops-microservice in default namespace should set metadata.namespace to a non-default namespace
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Checks whether a workload is running in the default namespace.

See https://avd.aquasec.com/misconfig/ksv110
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 app/k8s/deployment.yaml:4
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   4 [   name: devops-microservice
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


AVD-KSV-0118 (HIGH): container devops-microservice in default namespace is using the default security context
═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Security context controls the allocation of security parameters for the pod/container/volume, ensuring the appropriate level of protection. Relying on default security context may expose vulnerabilities to potential attacks that rely on privileged access.

See https://avd.aquasec.com/misconfig/ksv118
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────


